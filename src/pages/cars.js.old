import React, { Component } from 'react';
import FormGroup from '@material-ui/core/FormGroup';
import FormControlLabel from '@material-ui/core/FormControlLabel';
import Switch from '@material-ui/core/Switch';
import {CSSTransition, TransitionGroup} from 'react-transition-group';
import CarTeaser from './../components/carteaser.js';
import Pagination from './../components/pagination.js';
import {WP_SITE_URL, WP_API, POSTS_PER_PAGE} from '../constants/constants';

class Cars extends Component {
  constructor(props) {
    super(props);

    this.state = {
      loaded: false,
      cars: [],
      original: false,
      custom: false,
      renovate: false,
      pages: 0,
      currentPage: 1
    };

    this.handlePagination = this.handlePagination.bind(this);
  }

  componentWillMount() {
    let page = parseInt(this.props.params.page);

    if(page !== undefined) {
      this.setState({
        currentPage: page
      }, () => {
        this.fetchPosts();
      });
    } else {
      this.fetchPosts();
    }

  }

  handleChange(name, event) {
    this.setState({ [name] : event.target.checked });
  }

  componentDidUpdate(prevProps, prevState) {
    if(this.state.original !== prevState.original) {
      this.fetchPosts();
    }
    if(this.state.custom !== prevState.custom) {
      this.fetchPosts();
    }
    if(this.state.renovate !== prevState.renovate) {
      this.fetchPosts();
    }
    if(this.state.currentPage !== prevState.currentPage) {
      this.fetchPosts();
    }
  }

  handlePagination(pageNumber) {
    this.props.router.push('/cars/' + pageNumber);

    this.setState({ currentPage: pageNumber });
  }

  fetchPosts() {
    let filter = "";

    if(this.state.original === true) {
      filter = filter + "&condition[]=3";
    }

    if(this.state.custom === true) {
      filter = filter + "&condition[]=4";
    }

    if(this.state.renovate === true) {
      filter = filter + "&condition[]=5";
    }

    fetch(WP_SITE_URL + WP_API + "car?per_page= " + POSTS_PER_PAGE + "&page=" + this.state.currentPage + "&_embed" + filter)
    .then(response => response.json().then(json => ({
      headers: response.headers,
      status: response.status,
      json
    })))
    .then(response => {
      this.setState({
        loaded: true,
        cars: response.json,
        pages: parseInt(response.headers.get('X-WP-TotalPages'))
      })
    })
  }

  render() {
    if (this.state.loaded) {
      return (
        <div className="Cars">
          <div className="container py-3">
            <FormGroup aria-label="position" name="position" row>
              <FormControlLabel
                control={
                  <Switch checked={this.state.original} onChange={this.handleChange.bind(this,'original')} value="original" color="primary" />
                }
                labelPlacement="start"
                label="Original"
              />
              <FormControlLabel
                control={
                  <Switch checked={this.state.custom} onChange={this.handleChange.bind(this,'custom')} value="custom" color="primary" />
                }
                labelPlacement="start"
                label="Custom"
              />
              <FormControlLabel
                control={
                  <Switch checked={this.state.renovate} onChange={this.handleChange.bind(this,'renovate')} value="renovate" color="primary" />
                }
                labelPlacement="start"
                label="Renovate"
              />
            </FormGroup>
          </div>

          <div className="container my-3">

              <TransitionGroup className="row">
                {this.state.cars.map((car) => {
                  return (
                    <CSSTransition
                      key={car.id}
                      timeout={0}
                      classNames="item"
                    >
                      <CarTeaser key={car.id} car={car} />
                    </CSSTransition>
                  )
                })}
              </TransitionGroup>

          </div>
          
          <div className="container">
            <Pagination
              total={this.state.pages}
              current={this.state.currentPage}
              prevText="Prev"
              showPages={true}
              nextText="Next"
              onClickPage={this.handlePagination}
              baseClassName="pagination justify-content-center"
          />
        </div>

        </div>
      );
    } else {
      return (
        <div>Loading...</div>
      );
    }
    
  }
}

export default Cars;